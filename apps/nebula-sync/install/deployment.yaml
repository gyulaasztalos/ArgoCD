---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nebula-sync
  namespace: nebula-sync
  labels:
    app: nebula-sync
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nebula-sync
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: nebula-sync
    spec:
      containers:
        - name: nebula-sync
          image: ghcr.io/lovelaze/nebula-sync:v0.11.0
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
          securityContext:
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
          envFrom:
            - secretRef:
                name: nebula-sync-secret
            - configMapRef:
                name: nebula-sync-env
          resources:
            requests:
              memory: "256Mi"
              cpu: "100m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 30
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 15
            failureThreshold: 3
          volumeMounts:
            - name: config
              mountPath: /config
      restartPolicy: Always
      volumes:
        - name: config
          emptyDir: {}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - nebula-sync
              topologyKey: kubernetes.io/hostname
