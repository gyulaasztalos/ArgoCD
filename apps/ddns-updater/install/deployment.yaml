---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ddns-updater
  namespace: ddns-updater
  labels:
    app: ddns-updater
    app.kubernetes.io/name: ddns-updater
    app.kubernetes.io/part-of: ddns-updater
    app.kubernetes.io/instance: ddns-updater
spec:
  replicas: 1
  progressDeadlineSeconds: 600
  revisionHistoryLimit: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ddns-updater
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ddns-updater
        app.kubernetes.io/part-of: ddns-updater
        app.kubernetes.io/instance: ddns-updater
        app: ddns-updater
    spec:
      containers:
        - name: ddns-updater
          image: qmcgaw/ddns-updater:2.9.0
          imagePullPolicy: IfNotPresent
          securityContext:
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false # prevent sudo, etc.
            privileged: false               # prevent acting like host root
          ports:
            - name: webui
              containerPort: 8000
              protocol: TCP
            - name: health
              containerPort: 9999
              protocol: TCP
          envFrom:
            - configMapRef:
                name: ddns-updater-env
          resources:
            requests:
              memory: "64Mi"
              cpu: "100m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          readinessProbe:
            httpGet:
              path: /
              port: 9999
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 60
            timeoutSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /
              port: 9999
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 60
            timeoutSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          volumeMounts:
            - name: ddns-updater-secret
              mountPath: /updater/config/config.json
              subPath: config.json
            - name: data
              mountPath: /updater/data
      restartPolicy: Always
      volumes:
        - name: ddns-updater-secret
          secret:
            secretName: ddns-updater-secret
        - name: data
          persistentVolumeClaim:
            claimName: ddns-updater-data
      securityContext:
        seccompProfile:
          type: RuntimeDefault
        fsGroup: 1000            # hardcode group to non-root if not set in Dockerfile
        runAsUser: 1000          # hardcode user to non-root if not set in Dockerfile
        runAsGroup: 1000         # hardcode group to non-root if not set in Dockerfile
        runAsNonRoot: true       # hardcode to non-root. Redundant to above if Dockerfile is set USER 1000          # prevent acting like host root
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - ddns-updater
              topologyKey: kubernetes.io/hostname
