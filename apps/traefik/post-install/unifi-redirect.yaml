---
# 1. Service & Endpoints (External Router)
apiVersion: v1
kind: Service
metadata:
  name: unifi-router
  namespace: traefik
  annotations:
    ignore-check.kube-linter.io/dangling-service: "This service intentionally has no selector; used for external endpoint routing."
spec:
  ports:
  - name: https
    port: 443
    targetPort: 443  # UniFi uses port 443
---
apiVersion: discovery.k8s.io/v1
kind: EndpointSlice
metadata:
  name: unifi-router-slice
  namespace: traefik
  labels:
    kubernetes.io/service-name: unifi-router  # REQUIRED for Service binding
addressType: IPv4
ports:
  - name: https
    port: 443
    protocol: TCP
endpoints:
  - addresses:
      - "10.10.50.1"  # Router IP
    conditions:
      ready: true

---
# 2. ServersTransport (Self-Signed Cert Bypass)
apiVersion: traefik.io/v1alpha1
kind: ServersTransport
metadata:
  name: unifi-servers-transport
  namespace: traefik
spec:
  insecureSkipVerify: true
---
# 4. HTTPS IngressRoute (Main Configuration)
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: unifi
  namespace: traefik
  annotations:
    kubernetes.io/ingress.class: traefik-external
spec:
  entryPoints:
  - websecure
  routes:
  - match: Host(`unifi.local.asztalos.net`)
    kind: Rule
    middlewares:
    - name: default-headers  # Your default-headers equivalent
    services:
    - name: unifi-router
      kind: Service
      port: 443
      scheme: https
      serversTransport: unifi-servers-transport  # Self-signed handling
  tls:
    secretName: local-asztalos-net-tls  # Wildcard cert

