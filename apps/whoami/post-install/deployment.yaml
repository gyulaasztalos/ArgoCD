---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: whoami
  namespace: default
  labels:
    app: whoami
    app.kubernetes.io/name: whoami
    app.kubernetes.io/part-of: whoami
    app.kubernetes.io/instance: whoami
    app.kubernetes.io/component: whoami
spec:
  replicas: 4
  progressDeadlineSeconds: 600
  revisionHistoryLimit: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: whoami
  template:
    metadata:
      labels:
        app: whoami
        app.kubernetes.io/name: whoami
        app.kubernetes.io/part-of: whoami
        app.kubernetes.io/instance: whoami
        app.kubernetes.io/component: whoami
    spec:
      containers:
        - name: whoami
          image: traefik/whoami:v1.11.0
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
              name: http
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          resources:
            requests:
              memory: "64Mi"
              cpu: "50m"
            limits:
              memory: "128Mi"
              cpu: "250m"
          securityContext:
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false # prevent sudo, etc.
            privileged: false               # prevent acting like host root
            capabilities:
              drop: [ALL]
              add: [NET_BIND_SERVICE]  # Required for ports <1024 (e.g., 80/443)
          volumeMounts:
            - mountPath: /var/cache/whoami
              name: whoami-cache
            - mountPath: /var/run
              name: whoami-run
            - mountPath: /tmp
              name: whoami-tmp
      volumes:
        - name: whoami-cache
          emptyDir: {}
        - name: whoami-run
          emptyDir: {}
        - name: whoami-tmp
          emptyDir: {}
      securityContext:
        seccompProfile:
          type: RuntimeDefault   # enable seccomp and the runtimes default profile
        runAsUser: 1000          # hardcode user to non-root if not set in Dockerfile
        runAsGroup: 1000         # hardcode group to non-root if not set in Dockerfile
        runAsNonRoot: true       # hardcode to non-root. Redundant to above if Dockerfile is set USER 1000
        fsGroup: 1000          # hardcode fsGroup to non-root if not set in Dockerfile
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - whoami
              topologyKey: kubernetes.io/hostname
